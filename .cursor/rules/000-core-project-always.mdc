---
description: 
globs: 
alwaysApply: true
---

# Rosa - Diplomatic Conference Assistant (CTBTO SnT 2025)

## Project Essentials
- **Current State**: Split-screen UI implementation phase with working function calling
- **Main Development**: `examples/cvi-ui-conversation/` - React + TypeScript + Bun + Vite
- **Architecture**: Tavus CVI (frontend) ↔ Python backend via function calls
- **Critical Files**: 
  - Core docs: `dev_docs/tavus.txt`, `dev_docs/rosa-split-screen-simple-implementation.md`
  - Working examples: `examples/cvi-frontend-backend-tools/`, `examples/cvi-ui-conversation/`
  - Function calling: `src/components/SimpleWeatherHandler.tsx`, `src/components/CTBTOHandler.tsx`

## Critical Requirements (Diplomatic-Grade)
- **6 UN Languages**: Arabic, Chinese, English, French, Russian, Spanish
- **<200ms Response**: 95% of queries must respond sub-200ms
- **99.9% Red Zone Compliance**: Zero diplomatic violations
- **Split-Screen Layout**: Avatar (left) + Dynamic content (right)
- **Touchless Operation**: Voice-only, no keyboard/touch input
- **QR Code Output**: Complex info as scannable codes

## Tech Stack (Confirmed Working)
- **Frontend**: React 18 + TypeScript + Tavus CVI UI + Daily.co
- **Backend**: Python multi-agent system (Agent1.py) 
- **Package Manager**: Bun (not npm) for this project
- **Build Tool**: Vite + React + TypeScript
- **Function Calling**: Python backend handles complex logic, NOT native Tavus models
- **State Management**: React hooks + context (no external state libs yet)

## Development Commands
```bash
cd examples/cvi-ui-conversation
bun install
bun dev
```

## Architecture Flow
1. User speaks → Tavus CVI → Function call → Python backend
2. Python processes → Returns app-message → Frontend updates right panel
3. Frontend shows: speaker bios, venue maps, QR codes, etc.

## Key Patterns to Follow
- **Function calls via Python backend**: Extend existing Agent1.py, NOT separate services
- **Copy working patterns**: WeatherHandler.tsx and CTBTOHandler.tsx are proven templates
- **Use Tavus examples**: Always reference `examples/cvi-frontend-backend-tools/` patterns
- **Extend, don't replace**: Build on RosaDemo.tsx split-screen layout
- **Test incrementally**: Weather → CTBTO → New functions (proven working order)
